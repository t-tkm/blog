<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2025-10 on Takumi Tomita's Blog</title><link>https://t-tkm.github.io/blog/archives/2025-10/</link><description>Recent content in 2025-10 on Takumi Tomita's Blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy; 2022 Takumi Tomita Powered by Hugo &amp; Pickles.</copyright><lastBuildDate>Fri, 03 Oct 2025 17:00:00 +0900</lastBuildDate><atom:link href="https://t-tkm.github.io/blog/archives/2025-10/index.xml" rel="self" type="application/rss+xml"/><item><title>Minecraftサーバー管理で学ぶ！AWS ECS + MCP連携によるコンテナ運用（後編）</title><link>https://t-tkm.github.io/blog/posts/2025/10/aws_minecraft_mcp_2/</link><pubDate>Fri, 03 Oct 2025 17:00:00 +0900</pubDate><guid>https://t-tkm.github.io/blog/posts/2025/10/aws_minecraft_mcp_2/</guid><description>1. 概要 本記事では、前編で構築したAWS ECS上のMinecraftサーバーとClaude DesktopをMCP（Model Context Protocol、以降MCP） 経由で連携させ、自然言語でサーバー管理を行える革新的な環境を構築します。 前編では、AWS CDKを使用したインフラストラクチャの構築からポートフォワードの設定までを詳しく説明し、 MinecraftクライアントやRCONクライアント（rcon-cli、ECS Exec経由）を使った接続確認も実施しました。 本記事（後編）では、MCPサーバーの構築とClaude Desktopとの連携方法を解説し、 「時間を夜にして」「全員にダイヤモンドを配って」「空中に花火を打ち上げて」 といった自然な言葉でM</description></item></channel></rss>